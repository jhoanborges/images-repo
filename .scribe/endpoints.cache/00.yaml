## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST - Login User'
      description: 'In order to use this api you must get a valid username and password provided by our team.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Your api username.'
        required: true
        example: jhoan.borges@hexaguun.com
        type: string
        custom: []
      password:
        name: password
        description: 'Your api password.'
        required: true
        example: '12345678'
        type: string
        custom: []
    cleanBodyParameters:
      email: jhoan.borges@hexaguun.com
      password: '12345678'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                  "status": true,
                  "message": "User Logged In Successfully",
                  "token": "10|UoxWVWcsZRblw1kAv3UHLOg1oD1enTfD1z45x3TbMm"
              }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
                  "status": false,
                  "message": "Email & Password does not match with our record."
              }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/uploadImage
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST - Upload Image'
      description: 'In order to use this api you must get a valid username and password provided by our team.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      folder:
        name: folder
        description: 'Your folders name.'
        required: true
        example: productos
        type: string
        custom: []
      image:
        name: image
        description: 'Your file.'
        required: true
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      folder: productos
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Image created","data":{"name":"642931ab0cd4e.jpg","image":"http:\/\/images-repo.test\/imagenes\/productos\/642931ab0cd4e.jpg","folder":"productos","updated_at":"2023-04-02T07:41:31.000000Z","created_at":"2023-04-02T07:41:31.000000Z","id":71}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a4Pav6bE3ch5d6DZVke81fg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/getFileByID
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST - GET File by Image URL'
      description: 'In order to use this api you must get a valid username and password provided by our team.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      imageurl:
        name: imageurl
        description: 'file Your file.'
        required: true
        example: 'http://huels.com/numquam-quis-aut-aut-amet-velit-et.html'
        type: string
        custom: []
    cleanQueryParameters:
      imageurl: 'http://huels.com/numquam-quis-aut-aut-amet-velit-et.html'
    bodyParameters:
      image_url:
        name: image_url
        description: ''
        required: true
        example: odio
        type: string
        custom: []
    cleanBodyParameters:
      image_url: odio
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":false,"message":"La imagen no existe en la base de datos."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bZ1ae38c5Vf6DavE6P4kdgh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "GET - Get logged in user's information"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                  "id": 1,
                  "name": "Jhoan",
                  "email": "jhoan.borges@senter.mx",
                  "email_verified_at": null,
                  "created_at": "2022-12-19T22:51:20.000000Z",
                  "updated_at": "2022-12-19T22:51:20.000000Z",
                  "odoo_account_id": 13
              }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
                  "message": "Unauthenticated."
              }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aV4v665fP8ehkc1DZb3dEag'
    controller: null
    method: null
    route: null
    custom: []
